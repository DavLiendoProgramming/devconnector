{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { GET_PROFILE, PROFILE_ERROR, UPDATE_PROFILE, CLEAR_PROFILE, ACCOUNT_DELETED } from './types'; //Get current users profile\n\nexport const getCurrentProfile = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/profile/me');\n    console.log(res.data, ' him im res.data');\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (error) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: error.response.statusText,\n        status: error.response.status\n      }\n    });\n  }\n}; //CREATE OR UPDATE PROFILE\n\nexport const createProfile = (formData, history, edit = false) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.post('/api/profile', formData, config);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(edit ? 'Profile Updated' : ' Profile Created', 'success'));\n\n    if (!edit) {\n      history.push('/dashboard');\n    }\n\n    console.log(history, 'hi im history');\n  } catch (error) {\n    const errors = error.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: error.response.statusText,\n        status: error.response.status\n      }\n    });\n  }\n}; //ADD EXPERIENCE\n\nexport const addExperience = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.put('/api/profile/experience', formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Experience Added', 'success'));\n    history.push('/dashboard');\n    console.log(history, 'hi im history');\n  } catch (error) {\n    const errors = error.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: error.response.statusText,\n        status: error.response.status\n      }\n    });\n  }\n}; //ADD EDUCATION\n\nexport const addEducation = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.put('/api/profile/education', formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Education Added', 'success'));\n    history.push('/dashboard');\n  } catch (error) {\n    const errors = error.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: error.response.statusText,\n        status: error.response.status\n      }\n    });\n  }\n}; //DELETE EXPERIENCE\n\nexport const deleteExperience = id => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/profile/experience/${id}`);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Experience Deleted', 'success'));\n  } catch (error) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: error.response.statusText,\n        status: error.response.status\n      }\n    });\n  }\n}; //DELETE EDUCATION\n\nexport const deleteEducation = id => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/profile/education/${id}`);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Education Deleted', 'success'));\n  } catch (error) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: error.response.statusText,\n        status: error.response.status\n      }\n    });\n  }\n}; //DELETE ACCOUNT & PROFILE\n\nexport const deleteAccount = id => async dispatch => {\n  if (window.confirm('Are you sure? This action can not be undone!')) {\n    try {\n      const res = await axios.delete(`/api/profile`);\n      dispatch({\n        type: CLEAR_PROFILE\n      });\n      dispatch({\n        type: ACCOUNT_DELETED\n      });\n      dispatch(setAlert('Your account has been permanently deleted'));\n    } catch (error) {\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: {\n          msg: error.response.statusText,\n          status: error.response.status\n        }\n      });\n    }\n  }\n};","map":{"version":3,"sources":["C:/Users/David Liendo/Desktop/portfolio/DevConnect/client/src/actions/profile.js"],"names":["axios","setAlert","GET_PROFILE","PROFILE_ERROR","UPDATE_PROFILE","CLEAR_PROFILE","ACCOUNT_DELETED","getCurrentProfile","dispatch","res","get","console","log","data","type","payload","error","msg","response","statusText","status","createProfile","formData","history","edit","config","headers","post","push","errors","forEach","addExperience","put","addEducation","deleteExperience","id","delete","deleteEducation","deleteAccount","window","confirm"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { setAlert } from './alert';\r\n\r\nimport {\r\n  GET_PROFILE,\r\n  PROFILE_ERROR,\r\n  UPDATE_PROFILE,\r\n  CLEAR_PROFILE,\r\n  ACCOUNT_DELETED,\r\n} from './types';\r\n\r\n//Get current users profile\r\n\r\nexport const getCurrentProfile = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get('/api/profile/me');\r\n    console.log(res.data, ' him im res.data');\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: {\r\n        msg: error.response.statusText,\r\n        status: error.response.status,\r\n      },\r\n    });\r\n  }\r\n};\r\n\r\n//CREATE OR UPDATE PROFILE\r\n\r\nexport const createProfile = (formData, history, edit = false) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    const res = await axios.post('/api/profile', formData, config);\r\n\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(\r\n      setAlert(edit ? 'Profile Updated' : ' Profile Created', 'success')\r\n    );\r\n    if (!edit) {\r\n      history.push('/dashboard');\r\n    }\r\n    console.log(history, 'hi im history');\r\n  } catch (error) {\r\n    const errors = error.response.data.errors;\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: {\r\n        msg: error.response.statusText,\r\n        status: error.response.status,\r\n      },\r\n    });\r\n  }\r\n};\r\n\r\n//ADD EXPERIENCE\r\n\r\nexport const addExperience = (formData, history) => async (dispatch) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    const res = await axios.put('/api/profile/experience', formData, config);\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert('Experience Added', 'success'));\r\n\r\n    history.push('/dashboard');\r\n    console.log(history, 'hi im history');\r\n  } catch (error) {\r\n    const errors = error.response.data.errors;\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: {\r\n        msg: error.response.statusText,\r\n        status: error.response.status,\r\n      },\r\n    });\r\n  }\r\n};\r\n\r\n//ADD EDUCATION\r\n\r\nexport const addEducation = (formData, history) => async (dispatch) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    const res = await axios.put('/api/profile/education', formData, config);\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert('Education Added', 'success'));\r\n\r\n    history.push('/dashboard');\r\n  } catch (error) {\r\n    const errors = error.response.data.errors;\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: {\r\n        msg: error.response.statusText,\r\n        status: error.response.status,\r\n      },\r\n    });\r\n  }\r\n};\r\n\r\n//DELETE EXPERIENCE\r\n\r\nexport const deleteExperience = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.delete(`/api/profile/experience/${id}`);\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data,\r\n    });\r\n    dispatch(setAlert('Experience Deleted', 'success'));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: {\r\n        msg: error.response.statusText,\r\n        status: error.response.status,\r\n      },\r\n    });\r\n  }\r\n};\r\n\r\n//DELETE EDUCATION\r\n\r\nexport const deleteEducation = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.delete(`/api/profile/education/${id}`);\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data,\r\n    });\r\n    dispatch(setAlert('Education Deleted', 'success'));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: {\r\n        msg: error.response.statusText,\r\n        status: error.response.status,\r\n      },\r\n    });\r\n  }\r\n};\r\n\r\n//DELETE ACCOUNT & PROFILE\r\n\r\nexport const deleteAccount = (id) => async (dispatch) => {\r\n  if (window.confirm('Are you sure? This action can not be undone!')) {\r\n    try {\r\n      const res = await axios.delete(`/api/profile`);\r\n\r\n      dispatch({\r\n        type: CLEAR_PROFILE,\r\n      });\r\n      dispatch({ type: ACCOUNT_DELETED });\r\n      dispatch(setAlert('Your account has been permanently deleted'));\r\n    } catch (error) {\r\n      dispatch({\r\n        type: PROFILE_ERROR,\r\n        payload: {\r\n          msg: error.response.statusText,\r\n          status: error.response.status,\r\n        },\r\n      });\r\n    }\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}